<?php

/**
+------------------------------------------------------------------------------
 * Crypt 加密实现类
+------------------------------------------------------------------------------
 */
class YucCrypt {

    /**
    +----------------------------------------------------------
     * 加密字符串
    +----------------------------------------------------------
     * @access static
    +----------------------------------------------------------
     * @param string $str 字符串
     * @param string $key 加密key
    +----------------------------------------------------------
     * @return string
    +----------------------------------------------------------
     */
    static function encrypt($str, $key) {
        $r = md5($key);
        $c = 0;
        $v = "";
        $len = strlen($str);
        $l = strlen($r);
        for ($i = 0; $i < $len; $i++) {
            if ($c == $l)
                $c = 0;
            $v .= substr($r, $c, 1) . (substr($str, $i, 1) ^ substr($r, $c, 1));
            $c++;
        }
        return base64_encode(self::ed($v, $key));
    }

    /**
    +----------------------------------------------------------
     * 解密字符串
    +----------------------------------------------------------
     * @access static
    +----------------------------------------------------------
     * @param string $str 字符串
     * @param string $key 加密key
    +----------------------------------------------------------
     * @return string
    +----------------------------------------------------------
     */
    static function decrypt($str, $key) {
        $str = self::ed(base64_decode($str), $key);
        $v = "";
        $len = strlen($str);
        for ($i = 0; $i < $len; $i++) {
            $md5 = substr($str, $i, 1);
            $i++;
            $v .= (substr($str, $i, 1) ^ $md5);
        }
        return $v;
    }

    static private function ed($str, $key) {
        $r = md5($key);
        $c = 0;
        $v = "";
        $len = strlen($str);
        $l = strlen($r);
        for ($i = 0; $i < $len; $i++) {
            if ($c == $l)
                $c = 0;
            $v .= substr($str, $i, 1) ^ substr($r, $c, 1);
            $c++;
        }
        return $v;
    }

}

